/*! Momentum Dashboard - app.min.js
Copyright (c) 2013-2015 Momentum Dashboard Corp. All rights reserved.

All portions of this file are the confidential and proprietary
intellectual property of Momentum Dashboard Corp.

Use of this file is permitted only within the Momentum Google Chrome
extension as published on the Google Chrome Web Store at
https://chrome.google.com/webstore/detail/momentum/laookkfknpbbblfpciffpaejjkokdgca
*/
m.react.mixins.ReactBackboneEvents={componentDidMount:function(){this.eventListenerModel||(this.eventListenerModel=new Backbone.Model)},componentWillUnmount:function(){this.eventListenerModel&&this.eventListenerModel.stopListening()},listenTo:function(e,t,o){this.eventListenerModel.listenTo(e,t,o)},stopListening:function(e,t){this.eventListenerModel.stopListening(e,t)}},m.react.mixins.SafeSetState={safeSetState:function(e,t){this.isMounted()&&this.setState(e,t)}},m.models.DropdownMenuItem=Backbone.Model.extend({}),m.collect.TopDropdownMenuItems=Backbone.Collection.extend({model:m.models.DropdownMenuItem,url:m.globals.urlRoot+"settings/todo/menu",fetchCompleted:!1,initialize:function(e,t){t&&t.listId&&(this.listId=t.listId)},parse:function(e){return e.menuoptions},fetchIfRequired:function(){return this.fetchCompleted?!1:(this.fetchCompleted=!0,this.fetch({reset:!0,error:function(e,t,o){this.fetchCompleted=!1}}),!0)},queueFetch:function(){this.fetchCompleted=!1},fetch:function(e){var t={};return this.listId?(t.data={listId:this.listId},e=_.extend(e||{},t),Backbone.Collection.prototype.fetch.call(this,e)):null}}),m.models.TodoBase=Backbone.Model.extend({isTrue:function(e){var t=this.get(e);return void 0===t?!1:1==t},attemptSave:function(){},retrySave:function(){this.get("isProxy")?this.collection.parentList&&this.collection.parentList.createNewModel&&this.collection.parentList.createNewModel(this):this.attemptedSaveValues&&this.attemptSave(this.model)},saveOptions:function(){return this.collection.saveOptions},getValue:function(e){var t=null;return this.attemptedSaveValues&&this.attemptedSaveValues.hasOwnProperty(e)&&(t=this.attemptedSaveValues[e]),t||(t=this.get(e)),t}}),m.models.Todo=m.models.TodoBase.extend({defaults:function(){return{title:"empty todo...",done:!1,archive:!1,order:0,createdDate:new Date,archivedDate:null,completedDate:null,deleted:!1,deletedDate:null,listId:"inbox"}},parse:function(e){return e.done&&e.archive&&(e.listId="done"),e},archive:function(){this.save({archive:!0,archivedDate:new Date},this.saveOptions())},displayConnectingText:function(e){},successfulConnection:function(){},failedConnection:function(e){},attemptSave:function(e){var t=this;t.displayConnectingText('<i class="loading-icon"></i>Saving...');var o=t.saveOptions();o.wait=!0,o.success=function(){var e={};jQuery.extend(e,t.attemptedSaveValues),t.attemptedSaveValues=null,jQuery.extend(e,{saveFailed:!1,isLoading:!1}),setTimeout(function(){t.set(e),t.successfulConnection()},50)},o.error=function(e,o,i){if(200==o.status){var n={};jQuery.extend(n,t.attemptedSaveValues),t.attemptedSaveValues=null,jQuery.extend(n,{saveFailed:!1,isLoading:!1}),setTimeout(function(){t.set(n),t.successfulConnection()},50)}else t.set({saveFailed:!0,isLoading:!1}),t.failedConnection('Error saving… <a href="" class="retry">Retry</a>')},e?(t.attemptedSaveValues?jQuery.extend(t.attemptedSaveValues,e):t.attemptedSaveValues=e,t.save(e,o)):t.attemptedSaveValues&&(e=t.attemptedSaveValues,t.save(t.attemptedSaveValues,o)),jQuery.extend(e,{saveFailed:!1,isLoading:!0}),t.set(e)},comparator:"order"}),m.models.TodoProxy=m.models.TodoBase.extend({defaults:function(){return{done:!1,isProxy:!0,isLoading:!0,saveFailed:!1,proxyValid:!0}}}),m.models.TodoList=Backbone.Model.extend({itemFetchStarted:!1,defaults:{selected:!1},initialize:function(){this.itemCollection=new m.collect.Todos(null,{parentList:this}),this.listenTo(this.itemCollection,"add remove change reset",this.triggerChangeEvent),this.listenTo(this.itemCollection,"remainingCountChanged",this.remainingCountChanged),this.proxyCollection=new m.collect.TodoProxy(null,{parentList:this}),this.listenTo(this.proxyCollection,"add change",this.triggerChangeEvent)},todoItemMenuOptions:function(){if(this.itemCollection.menuOptions&&(this._todoItemMenuOptions=new Backbone.Collection(this.itemCollection.menuOptions)),!this._todoItemMenuOptions){var e=[{captionText:"Move to Inbox",commandId:"todo.move.type",options:{target:"inbox"}},{captionText:"Move to Today",commandId:"todo.move.type",options:{target:"today"}},{captionText:"Archive",commandId:"todo.move.done"},{captionText:"Delete",commandId:"todo.delete"}];this._todoItemMenuOptions=new Backbone.Collection(e)}return this._todoItemMenuOptions},topMenuItems:function(){return this._topMenuItems||(this._topMenuItems=new m.collect.TopDropdownMenuItems(null,{listId:this.id}),this.listenTo(this._topMenuItems,"add remove reset",this.triggerChangeEvent)),this._topMenuItems},refreshItems:function(){this.doItemFetchIfNeeded(!0)},doItemFetchIfNeeded:function(e){(e||!this.itemFetchStarted)&&(this.itemFetchStarted=!0,this.itemCollection.doFetchIfNeeded(e))},triggerChangeEvent:function(){this.trigger("change",this)},getDefaultCommands:function(){return[{commandId:"todo.move.type",options:{target:"inbox"}},{commandId:"todo.move.type",options:{target:"today"}}]},isDoneList:function(){var e=this.get("type");return"done"==e?!0:!1},listType:function(){return this.get("type")},displayConnectingText:function(e){},successfulConnection:function(){},failedConnection:function(e){},remainingTodoCount:function(){var e=this.get("count");return e?e:""},remainingCountChanged:function(e){var t=this.get("count");t!=e&&this.set("count",e)},supportsReordering:function(){var e=this.get("reorder");return e?!0:!1},createNewModel:function(e,t){var o=null;e instanceof Backbone.Model?o=e:(this.isDoneList()?e.listId="inbox":e.listId=this.id,o=new m.models.TodoProxy(e),this.proxyCollection.add(o));var i=this;t?i.displayConnectingText('<i class="loading-icon"></i>Retrying...'):i.displayConnectingText('<i class="loading-icon"></i>Saving...'),o.set({saveFailed:!1,isLoading:!0}),i.itemCollection.create({title:o.get("title"),listId:o.get("listId")},{wait:!0,success:function(){i.successfulConnection(),o.set("proxyValid",!1),ga("send","event","Todo","Add")},error:function(e,t,n){i.failedConnection('Error saving… <a href="" class="retry">Retry</a>'),o.set({saveFailed:!0,isLoading:!1})}})}}),m.models.TodoProvider=Backbone.Model.extend({fetchStarted:!1,initialize:function(){this.prefetchTodos=this.get("prefetchTodos"),this.listCollection=new m.collect.ProviderTodoLists(null,{provider:this,prefetchTodos:this.prefetchTodos}),this.listenTo(this,"add",this.onAdd),this.listenTo(this,"change:count",this.countChanged),this.listenTo(this.listCollection,"add remove change reset selectionChanged",this.triggerChangeEvent)},refreshItems:function(){this.listCollection.fetch()},doFetchIfNeeded:function(e){(e||!this.fetchStarted)&&(this.fetchStarted=!0,this.listCollection.doFetchIfNeeded(e))},refreshTodoItems:function(){var e=this.selectedList();e&&e.refreshItems()},getListOfType:function(e){return this.listCollection.getListOfType(e)},triggerChangeEvent:function(){this.trigger("change",this)},selectedList:function(){return this.listCollection?this.listCollection.selectedItem():null},providerStatus:function(){if(this.listCollection.listStatus)return this.listCollection.listStatus;var e=this.selectedList();return e?e.itemCollection.listStatus:null},selectList:function(e){var t=this.listCollection;t.selectItem(e)}}),m.collect.TodoProxy=Backbone.Collection.extend({model:m.models.TodoProxy,initialize:function(e,t){t&&t.parentList&&(this.parentList=t.parentList)}}),m.collect.TodosBase=Backbone.Collection.extend({model:m.models.Todo,saveOptions:{},initialize:function(e,t){t&&t.parentList&&(this.parentList=t.parentList),this.loadingFromServer=!0,localStorage.showTodoList||(localStorage.showTodoList=!1),this.listenTo(m,"newDay",this.onNewDay),this.listenTo(this,"reset",this.onReset),this.listenTo(this,"sync",this.onSync),this.listenTo(this,"add remove change",this.collectionChanged),this.listenTo(this,"reorder",this.reorderItem)},onReset:function(){this.loadingFromServer=!1,this.clearCompleted(),this.onLoadingFromServerChanged(),this.trigger("loadingFromServerChanged")},onSync:function(){this.loadingFromServer=!1,this.clearCompleted(),this.onLoadingFromServerChanged(),this.trigger("loadingFromServerChanged")},onNewDay:function(){this.loadingFromServer=!0,this.fetch({reset:!0})},onLoadingFromServerChanged:function(){},clearCompleted:function(){},collectionChanged:function(e){localStorage.setItem("todos-updated",new Date),this.onCollectionChanged(e)},onCollectionChanged:function(e){},completeToday:function(){var e=this;return this.filter(function(t){var o=t.get("completedDate");if(o){var i=o.split("T");if(i.length>1){var n=i[0],s=getActiveDateString();if(n!=s)return!1}}return 1==t.get("done")&&0==t.get("archive")&&0==t.get("deleted")&&t.get("listId")==e.parentList.id?!0:void 0})},completedCount:function(){var e=this.completeToday();return e.length},activeToday:function(){var e=this;return this.parentList.isDoneList()?this.where({deleted:!1,done:!0}):this.filter(function(t){var o=t.get("completedDate");if(o){var i=o.split("T");if(i.length>1){var n=i[0],s=getActiveDateString();if(n!=s)return!1}}if(0==t.get("archive")&&0==t.get("deleted")){var a=t.get("listId");if(a==e.parentList.id||!a)return!0;if("1-##default"==e.parentList.id)return!0}})},done:function(){return this.where({done:!0})},deleted:function(){return this.where({deleted:!0})},remaining:function(){var e=this.activeToday();if(this.parentList.isDoneList())return e;var t=_.filter(e,function(e){return 0==e.get("done")?!0:!1});return t},nextOrder:function(){return this.length?this.last().get("order")+100:100},comparator:"order",create:function(e,t){return void 0==e.order&&(e.order=this.nextOrder()),Backbone.Collection.prototype.create.call(this,e,t)},reorderItem:function(e){},hasValidCachedCompletedCount:function(){return!0}}),m.collect.ProviderTodoLists=Backbone.Collection.extend({model:m.models.TodoList,url:m.globals.urlRoot+"todos/lists",loadedFromCache:!1,listStatus:null,initialize:function(e,t){if(this.listenTo(this,"reset",this.collectionChanged),this.listenTo(this,"sync",this.collectionSync),this.listenTo(this,"change:count",this.handleCountChanged),t&&t.prefetchTodos&&(this.externallyFetchedOnce=!0),t&&t.provider){this.provider=t.provider;var o=this.listCacheKey(),i=localStorage[o];if(i){var n=JSON.parse(i);n&&n.length>0&&(this.loadedFromCache=!0,this.reset(n))}}},comparator:"order",mergeLists:function(e){var t=e;e&&e.lists&&(t=e.lists);var o=this,i=this.selectedItem();if(0==t.length?_.each(t,function(e){o.add(e,{merge:!0})}):this.set(t,{merge:!0}),!this.contains(i)){var n=this.models[0];this.selectItem(n.id)}},listCacheKey:function(){return this.provider?"listCache-"+this.provider.id:"listCache-default"},cacheLists:function(){var e=JSON.stringify(this.models),t=this.listCacheKey();localStorage[t]=e},doFetchIfNeeded:function(e){this.forceFetch=!0,this.externallyFetchedOnce=!0,this.loadedFromCache?this.fetch():this.fetch({reset:!0})},parse:function(e){return e.lists},handleCountChanged:function(){this.checkSelectedItem(),this.cacheLists()},collectionSync:function(){this.setStatus(null),this.checkSelectedItem(this.forceFetch),this.forceFetch=!1,this.cacheLists()},setStatus:function(e){this.listStatus=e,m.trigger("todo:loadingStateChange",e)},fetch:function(e){var t=this,o=e||{};if(this.provider){var i={};i.data={provider_id:this.provider.id},o=_.extend(o,i)}return o.error=function(e,o,i){return this.externallyFetchedOnce=!0,403==o.status&&o.responseJSON&&o.responseJSON.status&&"authRequired"==o.responseJSON.status?void t.setStatus({status:"error",message:"Authentication Required…",actionMessage:"Connect",action:"auth.connect",actionParameter:o.responseJSON}):void t.setStatus({status:"error",message:"Trouble connecting…",actionMessage:"Retry",action:"todo.connection.retry"})},o&&void 0!=o.reset&&this.setStatus({status:"loading",message:"Loading..."}),Backbone.Collection.prototype.fetch.call(this,o)},collectionChanged:function(){this.setStatus(null),this.checkSelectedItem(this.forceFetch),this.forceFetch=!1},selectedItem:function(){return this.selectedListId?this.get(this.selectedListId):null},getListOfType:function(e){return this.findWhere({type:e})},unSelectedItems:function(){var e=this;return this.selectedListId?this.reject(function(t){return t.id==e.selectedListId}):this.toArray()},isDoneList:function(){var e=this.selectedItem();return e&&e.get("done")?!0:!1},checkSelectedItem:function(e){if(!this.selectedListId){var t=this.findWhere({selected:!0});if(!t&&this.models.length>0)return t=this.models[0],void this.selectItem(t.id);t?this.selectItem(t.id):this.selectItem(null)}},selectItem:function(e){e!=this.selectedListId&&(this.selectedListId=e,this.trigger("selectionChanged"),null!=e&&this.externallyFetchedOnce&&this.selectedItem().doItemFetchIfNeeded(!0))}}),m.collect.Todos=m.collect.TodosBase.extend({url:m.globals.urlRoot+"todos",previousCount:-1,saveOptions:{patch:!0},listStatus:null,firstLoadCompleted:!1,reorderItem:function(e){var t={operations:[{REORDER:{move_id:e.move_id,move_target_id:e.move_target_id,move_offset:e.move_offset}}]},o=this.get(e.move_id);o&&(o.set({isLoading:!0}),$.ajax({type:"PATCH",contentType:"application/json",data:JSON.stringify(t),beforeSend:setMomentumAuthHeader,url:m.globals.urlRootApi+"todos"}).done(function(e){o.set({isLoading:!1})}).fail(function(e,t){o.set({saveFailed:!0,isLoading:!1})}))},onLoadingFromServerChanged:function(){this.setStatus(null),this.checkRemainingItemCount()},onCollectionChanged:function(e){this.checkRemainingItemCount()},completedCount:function(){var e=this.completeToday();return e.length},checkRemainingItemCount:function(){if(!this.loadingFromServer){this.firstLoadCompleted=!0;var e=this.remaining(),t=e.length;t!=this.previousCount&&(this.previousCount=t,this.trigger("remainingCountChanged",t))}},doFetchIfNeeded:function(e){this.firstItemFetchStarted?this.fetch():(this.firstItemFetchStarted=!0,this.fetch({reset:!0}))},setStatus:function(e){this.listStatus=e,m.trigger("todo:loadingStateChange",e)},parse:function(e){return e.items?(e.sections?this.itemSections=e.sections:this.itemSections=null,e.menu_options?this.menuOptions=e.menu_options:this.menuOptions=null,e.default_commands?this.defaultCommands=e.default_commands:this.defaultCommands=null,e.items):e},fetch:function(e){var t=this,o={};return this.parentList&&(o.data={listId:this.parentList.id}),o.error=function(e,o,i){return 403==o.status&&o.responseJSON&&o.responseJSON.status&&"authRequired"==o.responseJSON.status?void t.setStatus({status:"error",message:"Authentication Required…",actionMessage:"Connect",action:"auth.connect",actionParameter:o.responseJSON}):void t.setStatus({status:"error",message:"Trouble connecting…",actionMessage:"Retry",action:"todo.connection.retry"})},e=_.extend(e||{},o),e&&void 0!=e.reset&&this.setStatus({status:"loading",message:"Loading..."}),Backbone.Collection.prototype.fetch.call(this,e)}}),m.collect.TodosLegacy=m.collect.TodosBase.extend({localStorage:new Backbone.LocalStorage("momentum-todo"),isLegacy:!0,createOrderGaps:function(){var e=100;this.each(function(t){t.save({order:e},{silent:!0}),e+=100})},clearCompleted:function(e){var t="archived-"+getActiveDateString();if(e||!localStorage[t]){localStorage.setItem(t,Date.now());var o=!1,i=this.completeToday();_.each(i,function(e){var t=e.get("completedDate");if(t){var i=Date.parse(t),n=activeDateStringForDate(i);n!=getActiveDateString()&&(e.archive(),o=!0)}}),o&&this.trigger("reset")}},reorderItem:function(e){var t=this.get(e.move_id),o=this.get(e.move_target_id),i=e.move_offset>0?1:-1,n=this.indexOf(o),s=1;if(n+i>=0&&n+i<this.length){var a=this.at(n+i);s=Math.abs(a.get("order")-o.get("order")),20>=s&&(this.createOrderGaps(),s=Math.abs(a.get("order")-o.get("order")))}var r=o.get("order")+Math.ceil(s/2)*i;t.save({order:r},{silent:!0})}}),m.collect.TodoProviders=Backbone.Collection.extend({model:m.models.TodoProvider,url:m.globals.urlRoot+"todos/providers",initialize:function(e,t){this.listenTo(this,"reset",this.collectionReset)}}),m.models.TodoListManager=Backbone.Model.extend({mergeLists:function(e){},defaults:{activeTodoList:null},initialize:function(e){if(e&&e.prefetchTodos&&(this.prefetchTodos=!0),this.todoProviders=new m.collect.TodoProviders,!localStorage.activeTodoProvider)return void this.changeProvider(1,!0);var t=JSON.parse(localStorage.activeTodoProvider);return t&&t>0?void this.changeProvider(t,!0):void this.changeProvider(1,!0)},triggerChangeEvent:function(){this.trigger("change",this)},doFetchIfNeeded:function(e){this.externallyFetchedOnce=!0,this.activeProvider.doFetchIfNeeded(e)},changeProvider:function(e,t){var o=this.todoProviders.get(e);if(o||(this.todoProviders.add({id:e,prefetchTodos:this.prefetchTodos}),o=this.todoProviders.get(e)),o&&this.activeProvider!=o&&(localStorage.activeTodoProvider=o.id,this.activeProvider&&this.stopListening(this.activeProvider),this.activeProvider=o,this.listenTo(this.activeProvider,"change",this.triggerChangeEvent),this.triggerChangeEvent(),(this.externallyFetchedOnce||this.prefetchTodos)&&(this.activeProvider.refreshTodoItems(),this.activeProvider.doFetchIfNeeded(!0)),m.trigger("todo:providerChanged",e),!t)){this.authAttempts=0;var i=m.globals.urlRootApi+"settings/todo/providers/active",n={provider_id:e};$.ajax({type:"POST",contentType:"application/json",beforeSend:setMomentumAuthHeader,url:i,data:JSON.stringify(n)}).done(function(e){}).fail(function(e,t){})}}}),m.react.DropdownMenu=React.createClass({displayName:"DropdownMenu",mixins:[m.react.mixins.SafeSetState,m.react.mixins.ReactBackboneEvents],menuOptionLoadRequested:!1,getInitialState:function(){return{expanded:!1}},renderedOnce:!1,render:function(){var e=this,t={};if(this.props.activeClassName){var o=this.props.activeClassName;t[o]=this.state.expanded}var i=classNames("control control-dropdown icon icon-ellipsis",t),n=classNames("dropdown-container",{active:this.state.expanded});if(!this.renderedOnce&&!this.state.expanded)return React.createElement("div",{className:"dropdown-container"},React.createElement("i",{className:i,onClick:this.toggleDropdown}));var s=this.state.expanded?{display:"block"}:{display:"none"};this.renderedOnce=!0;var a=this.getActiveMenuOptions();if(a){if(a.length>0){var r=this.appendToClassNames(null,this.props.menuItemBaseCssClass);return React.createElement("div",{className:n},React.createElement("i",{className:i,onClick:this.toggleDropdown}),React.createElement("ul",{className:"dropdown",style:s,ref:"dropdown"},a.map(function(t){if(m.commandManager.canExecute(t.get("commandId"),e.props.model,t.get("options"),e.props.parentContext)){var o=e.appendToClassNames(r,t.get("css_class"));return t.get("imageUrl")?React.createElement("li",{className:o,onClick:e.handleClick.bind(e,t)},React.createElement("img",{src:t.get("imageUrl")}),t.get("captionText")):React.createElement("li",{className:o,onClick:e.handleClick.bind(e,t)},t.get("captionText"))}})))}return null}return null==a?React.createElement("div",{className:n},React.createElement("i",{className:i,onClick:this.toggleDropdown})):React.createElement("div",{className:n},React.createElement("i",{className:i,onClick:this.toggleDropdown}),React.createElement("ul",{className:"dropdown",style:s,ref:"dropdown"},React.createElement("li",{className:"loading"},React.createElement("i",{className:"loading-icon"})," Loading...")))},componentDidMount:function(){this.scrollIntoViewableArea(),this.listenTo(m,"globalEvent:closeDropdowns",this.closeDropdown)},componentDidUpdate:function(){this.scrollIntoViewableArea(),setMaxWidgetHeight()},bottom:function(e){return e.offset().top+e.outerHeight()},scrollIntoViewableArea:function(){if(this.props.comparisonNode&&this.refs.dropdown&&this.state.expanded){var e=ReactDOM.findDOMNode(this.refs.dropdown),t=this.bottom($(this.props.comparisonNode))-this.bottom($(e));0>t&&$(e).css({top:t+20+"px",right:"15px"})}},getActiveMenuOptions:function(){return this.props.activeMenuOptions.fetchIfRequired&&this.props.activeMenuOptions.fetchIfRequired()?!1:this.props.activeMenuOptions},toggleDropdown:function(e){e&&(e.stopPropagation(),e.preventDefault()),this.state.expanded||m.trigger("globalEvent:closeDropdowns",this),this.safeSetState({expanded:!this.state.expanded})},closeDropdown:function(e){this!=e&&this.safeSetState({expanded:!1})},handleClick:function(e,t){t&&(t.stopPropagation(),t.preventDefault()),e&&m.commandManager.execute(e.get("commandId"),this.props.model,e.get("options"),this.props.parentContext),this.closeDropdown()},appendToClassNames:function(e,t){e||(e=classNames());var o={};return t&&(o[t]=!0),classNames(e,o)}}),m.react.NewTodoInput=React.createClass({displayName:"NewTodoInput",mixins:[],getInitialState:function(){return{todoText:""}},render:function(){return React.createElement("input",{id:"todo-new",ref:"todoNew",className:"todo-input todo-new",type:"text",value:this.state.todoText,placeholder:"New todo",onKeyUp:this.handleKeyup,onKeyDown:this.handleKeydown,onChange:this.handleInputChange})},componentDidMount:function(){this.focusInputField()},componentDidUpdate:function(){this.focusInputField()},focusInputField:function(){this.refs.todoNew&&ReactDOM.findDOMNode(this.refs.todoNew).focus()},createOnEnter:function(e){this.refs.todoNew.value&&(this.setState({todoText:""}),this.props.selectedTodoList.createNewModel({title:this.refs.todoNew.value}))},handleInputChange:function(e){this.setState({todoText:e.target.value})},handleKeyup:function(e){13==e.keyCode&&this.createOnEnter(),27==e.keyCode&&(e.stopPropagation(),ReactDOM.findDOMNode(this.refs.todoNew).blur())},handleKeydown:function(e){if(32==e.keyCode){var t=this.refs.todoNew.value;t&&0!=t.length&&0!=t.trim().length||(e.preventDefault(),e.stopPropagation(),m.trigger("globalEvent:spacebar"))}}}),m.react.TodoItem=React.createClass({displayName:"TodoItem",mixins:[m.react.mixins.SafeSetState,m.react.mixins.ReactBackboneEvents],getInitialState:function(){return this.getStateFromModel({editing:!1})},render:function(){var e=this;if(deleted=this.props.data.get("deleted"),!deleted||this.state.isProxy&&this.state.proxyValid){var t=classNames({editing:this.state.editing,done:this.state.done,loading:this.state.isLoading,failed:this.state.saveFailed}),o=this.props.dragInfo.draggable&&!this.state.isProxy,i=this.props.hideItem?{display:"none"}:{display:"list-item"};return React.createElement("li",{className:t,draggable:o,ref:"todoItem",style:i,"data-todoid":this.props.data.id,onDragStart:this.props.dragInfo.dragStart.bind(null,this.props.data,this.state,this.refs.todoItem),onDragEnd:this.props.dragInfo.dragEnd.bind(null,this.props.data,this.state,this.refs.todoItem),onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave},React.createElement("div",{className:"view"},React.createElement(m.react.DropdownMenu,{activeMenuOptions:this.state.activeMenuOptions,menuItemBaseCssClass:"todo-menu-item",model:this.props.data,comparisonNode:".todo-list",parentContext:e.props.provider,activeClassName:"active"}),React.createElement("i",{className:"loading-icon"}),React.createElement("i",{className:"control error-icon",onClick:this.errorIconClicked},"!"),React.createElement("label",null,React.createElement("input",{className:"toggle",type:"checkbox",ref:"done",checked:this.state.done,onChange:this.doneChanged})),React.createElement("span",{className:"todo-title",ref:"todoTitle",onDoubleClick:this.startEdit},this.state.title)),React.createElement("input",{className:"edit todo-input",type:"text",ref:"editor",value:this.state.title,onKeyUp:this.handleInput,onBlur:this.abortEdit,onChange:this.handleEditorChange}))}return null},getStateFromModel:function(e){var t=e||{};return t.title=this.props.data.get("title"),t.done=this.props.data.get("done"),t.deleted=this.props.data.get("deleted"),t.isLoading=this.props.data.get("isLoading"),t.saveFailed=this.props.data.get("saveFailed"),t.isProxy=this.props.data.get("isProxy"),t.proxyValid=this.props.data.get("proxyValid"),t.activeMenuOptions=this.props.activeMenuOptions,t},componentDidMount:function(){if(this.props.data.get("isProxy")&&this.props.data.get("proxyValid")&&this.refs.todoTitle){var e=ReactDOM.findDOMNode(this.refs.todoTitle);e.scrollIntoView(!1)}},componentDidUpdate:function(){if(this.state.editing&&this.refs.editor){var e=ReactDOM.findDOMNode(this.refs.editor);e.focus(),e.setSelectionRange(this.state.title.length,this.state.title.length)}},errorIconClicked:function(e){this.props.data.retrySave()},handleInput:function(e){13==e.keyCode&&(this.saveEdit(),ga("send","event","Todo","Edit")),27==e.keyCode&&(e.stopPropagation(),this.abortEdit())},handleEditorChange:function(e){this.setState({title:e.target.value})},startEdit:function(e){this.state.done||this.setState({editing:!0})},saveEdit:function(){if(this.refs.editor){var e=this.refs.editor.value;e&&e.length>0?(this.setState({editing:!1}),this.props.data.attemptSave({title:e})):this.deleteTodo()}},abortEdit:function(){this.setState({editing:!1,title:this.props.data.get("title")})},deleteTodo:function(){ga("send","event","Todo","Delete"),this.setState({deleted:!0}),this.props.data.attemptSave({deleted:!0,deletedDate:(new Date).toISOString()})},doneChanged:function(){var e=this;if(this.refs.done){var t=this.refs.done.checked;setTimeout(function(){e.setState({done:t}),e.props.data.attemptSave({done:t,completedDate:t?(new Date).toISOString():null})},10)}},componentWillReceiveProps:function(e){this.safeSetState(this.getStateFromModel())},onMouseEnter:function(e){this.listenTo(m,"globalEvent:spacebar",this.invokeDefaultCommand)},onMouseLeave:function(e){this.stopListening(m,"globalEvent:spacebar")},invokeDefaultCommand:function(){this.props.defaultCommandHandler&&this.props.defaultCommandHandler(this.props.data)}}),m.react.TodoItemList=React.createClass({displayName:"TodoItemList",mixins:[],componentDidMount:function(){setMaxWidgetHeight()},componentDidUpdate:function(){setMaxWidgetHeight()},render:function(){var e=this;if(this.props.selectedTodoList){var t=this.props.selectedTodoList.itemCollection.activeToday(),o=this.props.selectedTodoList.proxyCollection.where({proxyValid:!0}),i=this.props.selectedTodoList.todoItemMenuOptions(),n=this.props.selectedTodoList.itemCollection.itemSections;if(t){var s=this.props.selectedTodoList.supportsReordering(),a={dragStart:this.dragStart,dragEnd:this.dragEnd,dragOver:this.dragOver,draggable:s},r={display:"list-item",height:"0px"};if(this.props.selectedTodoList.itemCollection.firstLoadCompleted&&0==t.length&&!this.props.selectedTodoList.isDoneList()){var d=null,c=null,l=!1;if("today"==this.props.selectedTodoList.listType()){l=!0;var h=this.props.provider.listCollection.getListOfType("inbox");if(h){var p=h.get("count");p>0&&(c=h.id,d=p+" todos in Inbox")}}else if("inbox"==this.props.selectedTodoList.listType()){l=!0;var u=this.props.provider.listCollection.getListOfType("today");if(u){var p=u.get("count");p>0&&(c=u.id,d=p+" todos in Today")}}if(l)return React.createElement("ol",{className:"todo-list",ref:"todoList",onDrop:this.drop},React.createElement("li",{className:"placeholder",ref:"placeholder"}),React.createElement("li",{className:"empty",ref:"empty"},React.createElement("div",null,React.createElement("span",{className:"empty-title"},"Add a todo to get started"),React.createElement("span",{className:"empty-link",onClick:this.clickEmptyLink.bind(null,c)},d))),React.createElement("li",{className:"placeholder",ref:"endPlaceholder",style:r}))}if(n){var g=t.filter(function(e){return!e.get("section_id")});return React.createElement("ol",{className:"todo-list",ref:"todoList",onDrop:this.drop},React.createElement("li",{className:"placeholder",ref:"placeholder"}),n.map(function(o){return React.createElement(m.react.TodoSection,{key:o.id,section:o,listItems:t,provider:e.props.provider,activeMenuOptions:i,dragInfo:a,defaultCommandHandler:e.invokeDefaultCommand})}),g.map(function(t){return React.createElement(m.react.TodoItem,{key:t.id,data:t,provider:e.props.provider,activeMenuOptions:i,dragInfo:a,defaultCommandHandler:e.invokeDefaultCommand})}),o.map(function(e){return React.createElement(m.react.TodoItem,{key:e.cid,data:e,dragInfo:a})}),React.createElement("li",{className:"placeholder",ref:"endPlaceholder",style:r}))}return React.createElement("ol",{className:"todo-list",ref:"todoList",onDrop:this.drop},React.createElement("li",{className:"placeholder",ref:"placeholder"}),t.map(function(t){return React.createElement(m.react.TodoItem,{key:t.id,data:t,provider:e.props.provider,activeMenuOptions:i,dragInfo:a,defaultCommandHandler:e.invokeDefaultCommand})}),o.map(function(t){return React.createElement(m.react.TodoItem,{key:t.cid,data:t,provider:e.props.provider,dragInfo:a,defaultCommandHandler:e.invokeDefaultCommand})}),React.createElement("li",{className:"placeholder",ref:"endPlaceholder",style:r}))}}return React.createElement("ol",{className:"todo-list"})},clickEmptyLink:function(e){e&&this.props.provider.selectList(e)},drop:function(e){if("todo"==this.dragmode){var t=this.dragging,o=$(this.move_target),i=this.draggingModel.id,n=o.data("todoid"),s=this.move_offset;-1==this.move_offset?o.before(t):o.after(t),this.$placeholder.hide(),this.dragging.show(),this.props.selectedTodoList.itemCollection.reorderItem({move_id:i,move_target_id:n,move_offset:s}),this.clearDragData()}},dragStart:function(e,t,o,i){var n=this;return t.editing?(i.preventDefault(),i.stopPropagation(),!1):this.props.selectedTodoList.supportsReordering()?(i.dataTransfer.effectAllowed="move",i.dataTransfer.setData("text","dummy"),this.dragmode="todo",this.dragging=$(o),this.$placeholder=$(this.refs.placeholder),this.draggingModel=e,this.todoListDOMNode=ReactDOM.findDOMNode(this.refs.todoList),this.todoListDOMNodeChildren=this.todoListDOMNode.children,void _.each(this.todoListDOMNodeChildren,function(e){e.ondragenter=n.dragEnter.bind(null,e),e.ondragover=n.dragOver.bind(null,e)})):(i.preventDefault(),i.stopPropagation(),!1)},dragEnter:function(e,t){if("todo"==this.dragmode){if(this.dragging.hide(),"placeholder"==e.className)return!1;var o=$(e);return e.nextSibling==this.refs.endPlaceholder?(this.move_target=e,this.move_offset=1):(this.move_target=e,this.move_offset=-1),o.before(this.$placeholder),this.$placeholder.css("display","list-item"),this.$placeholder.height(this.dragging.height()),!1}},dragOver:function(e,t){if("todo"==this.dragmode){if("placeholder"==e.className)return!1;var o=!1;if(this.move_target==e&&e.nextSibling==this.refs.endPlaceholder){var i=$(e).offset().top+$(e).outerHeight()/2;t.clientY>i?1!=this.move_offset&&(this.move_offset=1,o=!0):-1!=this.move_offset&&(this.move_offset=-1,o=!0)}if(!o)return!1;var n=$(e);return this.dragging.hide(),-1==this.move_offset?n.before(this.$placeholder):n.after(this.$placeholder),this.$placeholder.css("display","list-item"),this.$placeholder.height(this.dragging.height()),!1}},dragEnd:function(e,t,o,i){return i.preventDefault(),i.stopPropagation(),"todo"==this.dragmode&&(this.$placeholder.hide(),this.dragging.show(),this.clearDragData()),!1},clearDragData:function(){if(_.each(this.todoListDOMNodeChildren,function(e){e&&(e.ondragenter=null,e.ondragover=null)}),this.move_target=null,this.move_offset=null,this.dragmode=null,this.dragging=null,this.draggingModel=null,this.refs.info){var e=ReactDOM.findDOMNode(this.refs.info);$(e).after(this.$placeholder)}else $(this.todoListDOMNode).prepend(this.$placeholder)},invokeDefaultCommand:function(e){var t=this,o=this.props.selectedTodoList.getDefaultCommands();if(o&&o.length>0){var i=_.find(o,function(o){return m.commandManager.canExecute(o.commandId,e,o.options,t.props.provider)?!0:!1});i&&m.commandManager.execute(i.commandId,e,i.options,t.props.provider)}}}),m.react.TodoList=React.createClass({displayName:"TodoList",mixins:[],render:function(){var e=this.props.show?{display:"block"}:{display:"none"};if(this.props.activeProvider){var t=this.props.activeProvider.selectedList();if(t)return React.createElement("div",{className:"pane todo-pane",style:e,onClick:this.handleOnClick},React.createElement(m.react.TodoListHeader,{activeProvider:this.props.activeProvider}),React.createElement("div",{className:"empty empty-todo"},React.createElement("div",{className:"content"},React.createElement("div",{
className:"graphic"},"☺"),React.createElement("div",{className:"title"},"Nothing to do"),React.createElement("div",{className:"description"},"One step at a time...")),React.createElement("div",{className:"action"},React.createElement("a",{href:"",className:"show-completed"},"Completed today"))),React.createElement(m.react.TodoItemList,{selectedTodoList:t,provider:this.props.activeProvider,providerStatus:this.props.activeProvider.providerStatus()}),React.createElement(m.react.NewTodoInput,{selectedTodoList:t}),React.createElement("span",{id:"todo-remaining"}))}return React.createElement("div",{className:"pane todo-pane",style:e},React.createElement(m.react.TodoListHeader,{activeProvider:this.props.activeProvider}))},handleOnClick:function(e){e&&(e.stopPropagation(),e.preventDefault()),m.trigger("globalEvent:closeDropdowns",this)}}),m.react.TodoListActive=React.createClass({displayName:"TodoListActive",mixins:[m.react.mixins.SafeSetState,m.react.mixins.ReactBackboneEvents],activeMenuOptions:null,render:function(){var e=classNames("todo-list-active",{choosing:this.props.choosing}),t=null;if(this.props.activeProvider){var o=this.props.activeProvider.providerStatus(),i=this.props.activeProvider.selectedList();if(i){var n=this.props.activeProvider.listCollection.length>1?null:{display:"none"},e=classNames("todo-list-active",{choosing:this.props.choosing&&this.props.activeProvider.listCollection.length>1});if(o)return t=classNames({"loading-icon":"loading"==o.status}),React.createElement("ul",{className:e,onClick:this.props.onClickEvent},React.createElement("li",null,React.createElement("span",{className:"todo-list-name"},i.get("title")),React.createElement("i",{className:"icon icon-down",style:n},React.createElement("img",{src:"img/down.svg"})),React.createElement("span",{className:"todo-count active-todo-count"},React.createElement("i",{className:t})," ",o.message," ",React.createElement("a",{href:"",className:"retry",onClick:this.actionClick.bind(this,o)},o.actionMessage)),React.createElement(m.react.DropdownMenu,{key:i.id,activeMenuOptions:i.topMenuItems(),model:i})));var s=i.remainingTodoCount();return React.createElement("ul",{className:e,onClick:this.props.onClickEvent},React.createElement("li",null,React.createElement("span",{className:"todo-list-name"},i.get("title")),React.createElement("i",{className:"icon icon-down",style:n},React.createElement("img",{src:"img/down.svg"})),React.createElement("span",{className:"todo-count active-todo-count"},s),React.createElement(m.react.DropdownMenu,{key:i.id,activeMenuOptions:i.topMenuItems(),model:i})))}if(o)return t=classNames({"loading-icon":"loading"==o.status}),React.createElement("ul",{className:e},React.createElement("li",null,React.createElement("span",{className:"todo-list-name"}),React.createElement("span",{className:"todo-count active-todo-count"},React.createElement("i",{className:t})," ",o.message," ",React.createElement("a",{href:"",className:"retry",onClick:this.actionClick.bind(this,o)},o.actionMessage))))}return React.createElement("ul",{className:e},React.createElement("li",null,React.createElement("span",{className:"todo-list-name"}),React.createElement("span",{className:"todo-count active-todo-count"},React.createElement("i",{className:"loading-icon"})," Loading...")))},actionClick:function(e,t){t&&(t.stopPropagation(),t.preventDefault()),e&&e.action&&m.commandManager.execute(e.action,e)}}),m.react.TodoListChooser=React.createClass({displayName:"TodoListChooser",mixins:[m.react.mixins.SafeSetState],render:function(){var e=this;if(this.props.activeProvider){var t=classNames("todo-list-chooser"),o=this.props.expanded?{display:"block"}:{display:"none"},i=this.props.activeProvider.listCollection,n=i.unSelectedItems();return React.createElement("ul",{className:t,style:o},n.map(function(t){return React.createElement("li",{key:t.id,onClick:e.props.onClickEvent.bind(null,t.id)},React.createElement("span",{className:"todo-list-name"},t.get("title")),React.createElement("span",{className:"todo-count"},t.get("count")))}))}return null}}),m.react.TodoListHeader=React.createClass({displayName:"TodoListHeader",mixins:[m.react.mixins.SafeSetState,m.react.mixins.ReactBackboneEvents],getInitialState:function(){return{expanded:!1}},render:function(){return this.props.activeProvider?React.createElement("div",{className:"todo-header"},React.createElement(m.react.TodoListActive,{activeProvider:this.props.activeProvider,choosing:this.state.expanded,onClickEvent:this.toggleChooser}),React.createElement(m.react.TodoListChooser,{activeProvider:this.props.activeProvider,expanded:this.state.expanded,onClickEvent:this.chooseList})):React.createElement("div",{className:"todo-header"},React.createElement(m.react.TodoListActive,{activeProvider:this.props.activeProvider,choosing:this.state.expanded,onClickEvent:this.toggleChooser}))},componentDidMount:function(){this.listenTo(m,"globalEvent:closeDropdowns",this.stopChoosing)},toggleChooser:function(e){e&&(e.preventDefault(),e.stopPropagation()),m.trigger("globalEvent:closeDropdowns"),this.safeSetState({expanded:!this.state.expanded})},stopChoosing:function(){this.safeSetState({expanded:!1})},chooseList:function(e,t){t&&t.stopPropagation(),this.stopChoosing(),this.props.activeProvider.selectList(e)}}),m.react.TodoPane=React.createClass({displayName:"TodoPane",mixins:[m.react.mixins.ReactBackboneEvents],renderedOnce:!1,getInitialState:function(){return{showTodoList:!1,initialOpenState:!1}},render:function(){return this.renderedOnce||this.state.showTodoList?(this.renderedOnce=!0,React.createElement(m.react.TodoList,{show:this.state.showTodoList,onClick:this.clickOther,activeProvider:this.props.todoListManager.activeProvider})):null},setTodoOpenState:function(e){this.setState({showTodoList:e}),e?(this.props.todoListManager.externallyFetchedOnce=!0,this.props.todoListManager.activeProvider.doFetchIfNeeded(),this.props.todoListManager.activeProvider.refreshTodoItems(),m.trigger("todo:visible")):m.trigger("todo:hidden")},setTodoStateClosed:function(){this.setTodoOpenState(!1)},handleManagerChange:function(){this.setState({render:!0})},handleTodoLoadingStateChange:function(){this.setState({render:!0})},providerChanged:function(){this.props.todoListManager.doFetchIfNeeded()},clickOther:function(e){e&&e.preventDefault()},componentDidMount:function(){this.state.initialOpenState&&this.props.todoListManager.activeProvider.doFetchIfNeeded(),this.listenTo(this.props.todoListManager,"change",this.handleManagerChange),this.listenTo(m,"todo:loadingStateChange",this.handleTodoLoadingStateChange),this.listenTo(m,"todo:providerChanged",this.providerChanged)}}),m.react.TodoSection=React.createClass({displayName:"TodoSection",mixins:[],render:function(){var e=this;if(this.props.section){var t=this.props.listItems.where({section_id:this.props.section.id}),o=classNames("h4"),i={};return React.createElement("div",null,React.createElement("li",{className:o,style:i,"data-sectionid":this.props.section.id},React.createElement("h4",null,this.props.section.title)),t.map(function(t){return React.createElement(m.react.TodoItem,{key:t.id,data:t,provider:e.props.provider,activeMenuOptions:e.props.activeMenuOptions,dragInfo:e.props.dragInfo,defaultCommandHandler:e.props.defaultCommandHandler})}))}}});